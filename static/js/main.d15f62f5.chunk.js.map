{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Exchanges.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Homepage.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Cryptocurrencies","simplified","cryptosList","data","isFetching","cryptos","setCryptos","searchTerm","setsearchTerm","filteredData","coins","filter","coin","name","toLowerCase","includes","console","log","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","id","title","rank","extra","iconUrl","hoverable","millify","price","marketCap","change","Typography","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimePeriod","cryptoDetails","stats","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","Exchanges","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","method","useGetCryptoNewsQuery","demoImage","News","setnewsCategory","cryptoNews","span","showSearch","optionFilterProp","filterOption","input","option","news","image","thumbnail","contentUrl","alt","substring","provider","moment","datePublished","startOf","fromNow","Homepage","globalStats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","App","exact","path","style","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.d15f62f5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\r\nimport { Button, Menu, Typography, Avatar } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport icon from '../images/cryptocurrency.png';\r\n\r\nconst Navbar = () => {\r\n  const [activeMenu, setActiveMenu] = useState(true);\r\n  const [screenSize, setScreenSize] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setScreenSize(window.innerWidth);\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (screenSize <= 800) {\r\n      setActiveMenu(false);\r\n    } else {\r\n      setActiveMenu(true);\r\n    }\r\n  }, [screenSize]);\r\n\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"logo-container\">\r\n        <Avatar src={icon} size=\"large\" />\r\n        <Typography.Title level={2} className=\"logo\"><Link to=\"/\">Cryptoverse</Link></Typography.Title>\r\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\r\n      </div>\r\n      {activeMenu && (\r\n      <Menu theme=\"dark\">\r\n        <Menu.Item icon={<HomeOutlined />}>\r\n          <Link to=\"/\">Home</Link>\r\n        </Menu.Item>\r\n        <Menu.Item icon={<FundOutlined />}>\r\n          <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n        </Menu.Item>\r\n        <Menu.Item icon={<MoneyCollectOutlined />}>\r\n          <Link to=\"/exchanges\">Exchanges</Link>\r\n        </Menu.Item>\r\n        <Menu.Item icon={<BulbOutlined />}>\r\n          <Link to=\"/news\">News</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import {createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': 'd51adb557amsh2aa5a154b3b9986p12feb3jsnb2f7bde10e48'\r\n}\r\n\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders});\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl: baseUrl}),\r\n    endpoints: (builder) => ({\r\n      getCryptos: builder.query({\r\n        query: (count) => createRequest(`/coins?limit=${count}`),\r\n      }),\r\n      getExchanges: builder.query({\r\n        query: () => createRequest('/exchanges'),\r\n      }),\r\n      getCryptoDetails: builder.query({\r\n        query: (coinId) => createRequest(`/coin/${coinId}`),\r\n      }),\r\n      getCryptoHistory: builder.query({\r\n        query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history/${timeperiod}`),\r\n      }),\r\n    }),\r\n  });\r\n  \r\n  export const { useGetCryptosQuery, useGetCryptoDetailsQuery, useGetExchangesQuery, useGetCryptoHistoryQuery } = cryptoApi;","import React, {useState, useEffect} from 'react';\r\nimport millify from 'millify';\r\nimport { Link } from 'react-router-dom';\r\nimport {Card, Row, Col, Input} from 'antd';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\n\r\nconst Cryptocurrencies = ({simplified}) => {\r\n    const count = simplified ? 10 : 100\r\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [searchTerm, setsearchTerm] = useState('');\r\n\r\n    useEffect(() => {\r\n        // setCryptos(cryptosList?.data?.coins);\r\n\r\n        const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\r\n\r\n        setCryptos(filteredData);\r\n\r\n    }, [cryptosList, searchTerm]);\r\n    console.log(cryptos);\r\n    if(isFetching) return 'Loading...';\r\n    return (\r\n        <>\r\n            {!simplified && (\r\n            <div className=\"search-crypto\">\r\n                <Input placeholder=\"Search Cryptocurrency\" onChange={(e) => setsearchTerm(e.target.value)}/>\r\n            </div>\r\n            )\r\n            }              \r\n            <Row gutter={[32,32]} className=\"crypto-card-container\">\r\n                {cryptos?.map((currency) => (\r\n                     <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n                         <Link to={`/crypto/${currency.id}`}>\r\n                            <Card title={`${currency.rank}. ${currency.name}`}\r\n                                  extra={<img className=\"crypto-image\" src={currency.iconUrl}/>}\r\n                                  hoverable\r\n                            >\r\n                                <p>Price: {millify(currency.price)}</p>\r\n                                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                                <p>Daily Change: {millify(currency.change)}%</p>\r\n                            </Card>\r\n                         </Link>\r\n                     \r\n                     </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies;\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Col, Row, Typography } from 'antd';\r\nconst { Title } =  Typography;\r\n\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n    const coinPrice = [];\r\n    const coinTimestamp = [];\r\n\r\n    // for(let i=0; i< coinHistory?.data?.history?.length; i+=1)\r\n    // {\r\n    //     coinPrice.push(coinHistory?.data?.history[i].price);\r\n    //     coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\r\n    // }\r\n\r\n    for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n        coinPrice.push(coinHistory?.data?.history[i].price);\r\n      }\r\n    \r\n    for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n        coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\r\n      }\r\n\r\n    const data = {\r\n        labels: coinTimestamp,\r\n        datasets: [\r\n            {\r\n                label: 'Price in USD',\r\n                data: coinPrice,\r\n                fill: false,\r\n                backgroundColor: '#0071bd',\r\n                borderColor: '#0071bd',\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    };  \r\n\r\n    return (\r\n        <>\r\n            <Row className=\"chart-header\">\r\n                <Title level={2} className=\"chart-title\">{coinName} Price Chart</Title>\r\n                <Col className=\"price-container\">\r\n                    <Title level={5} className=\"price-change\">Change {coinHistory?.data?.change}%</Title>\r\n                    <Title level={5} className=\"current-price\">Current {coinName} Price: ${currentPrice}</Title>\r\n                </Col>\r\n            </Row>\r\n            <Line data={data} options={options}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart\r\n","import React, { useState } from 'react';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { useParams } from 'react-router';\r\nimport millify from 'millify';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\r\nimport LineChart from './LineChart';\r\nconst { Title, Text } =  Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n    const { coinId } = useParams();\r\n    const [timeperiod, setTimePeriod] = useState('7d');\r\n    const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n    const { data: coinHistory } = useGetCryptoHistoryQuery({coinId, timeperiod});\r\n    if(isFetching) return 'Loading...';\r\n    console.log(data);\r\n    const cryptoDetails = data?.data?.coin;\r\n\r\n    const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n    const stats = [\r\n        { title: 'Price in USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'Rank', value: cryptoDetails.rank , icon: <NumberOutlined /> },\r\n        { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n        { title: 'MarketCap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n    ];\r\n\r\n    const genericStats = [\r\n        { title: 'Number of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n        { title: 'Number of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n        { title: 'Approved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    ];\r\n\r\n    return (\r\n        <Col className=\"coin-detail-container\">\r\n            <Col className=\"coin-heading-container\">\r\n                <Title level={2} className=\"coin-name\">\r\n                    {cryptoDetails.name} {cryptoDetails.slug} Price\r\n                </Title>\r\n                <p>\r\n                    {cryptoDetails.name} live prince in US Dollars.\r\n                    View value statistics, market cap and supply.\r\n                </p>\r\n            </Col>\r\n            <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Time Period\" onChange={(value) => setTimePeriod(value)}>\r\n                {time.map((date) => <Option key={date}>{date}</Option>)}\r\n            </Select>\r\n            <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\r\n            <Col className=\"stats-container\">\r\n                <Col className=\"coin-value-statistics\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading\">\r\n                            {cryptoDetails.name} Value Statistics\r\n                        </Title>\r\n                        <p>\r\n                            An overview showing the stats of {CryptoDetails.name}\r\n                        </p>\r\n                    </Col>\r\n                    {\r\n                        stats.map(({ icon, title, value}) => (\r\n                            <Col className=\"coin-stats\">\r\n                                <Col className=\"coin-stats-name\">\r\n                                    <Text>{icon}</Text>\r\n                                    <Text>{title}</Text>\r\n                                </Col>\r\n                                <Text className=\"stats\">{value}</Text>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n                </Col>\r\n                <Col className=\"other-stats-info\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading\">\r\n                            Other Statistics\r\n                        </Title>\r\n                        <p>\r\n                            An overview showing the stats of all Cryptocurrencies.\r\n                        </p>\r\n                    </Col>\r\n                    {\r\n                        genericStats.map(({ icon, title, value}) => (\r\n                            <Col className=\"coin-stats\">\r\n                                <Col className=\"coin-stats-name\">\r\n                                    <Text>{icon}</Text>\r\n                                    <Text>{title}</Text>\r\n                                </Col>\r\n                                <Text className=\"stats\">{value}</Text>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n                </Col>\r\n            </Col>\r\n            <Col className=\"coin-desc-link\">\r\n                <Row className=\"coin-desc\">\r\n                    <Title level={3} className=\"coin-details-heading\">\r\n                        What is {cryptoDetails.name}\r\n                        {HTMLReactParser(cryptoDetails.description)}\r\n                    </Title>\r\n                </Row>\r\n                <Col className=\"coin-links\">\r\n                    <Title level={3} className=\"coin-details-heading\">\r\n                        {cryptoDetails.name}\r\n                    </Title>\r\n                    {cryptoDetails.links.map((link) => (\r\n                         <Row className=\"coin-link\" key={link.name}>\r\n                            <Title level={5} className=\"link-name\">\r\n                                {link.type}\r\n                            </Title>\r\n                            <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                                {link.name}\r\n                            </a>\r\n                         </Row>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default CryptoDetails;\r\n","import React from 'react'\r\n\r\nconst Exchanges = () => {\r\n    return (\r\n        <div>\r\n            Exchanges\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Exchanges;\r\n","import {createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoNewsHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n    'x-rapidapi-key': 'b1362c9901mshc2d39e104bbe13ap1560dfjsn450a61487a86'\r\n}\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders});\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({baseUrl}),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: ({newsCategory ,count}) => {\r\n            console.log(newsCategory);\r\n            console.log(count);\r\n            return ({\r\n                url: `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`,\r\n                method: 'GET',\r\n                headers: cryptoNewsHeaders,\r\n                count: count\r\n                })\r\n            }\r\n        })\r\n    })\r\n});\r\n\r\nexport const {\r\n    useGetCryptoNewsQuery,\r\n} = cryptoNewsApi;\r\n\r\n// var axios = require(\"axios\").default;\r\n\r\n// var options = {\r\n//   method: 'GET',\r\n//   url: 'https://bing-news-search1.p.rapidapi.com/news/search',\r\n//   params: {q: '<REQUIRED>', safeSearch: 'Off', textFormat: 'Raw', freshness: 'Day'},\r\n//   headers: {\r\n//     'x-bingapis-sdk': 'true',\r\n//     'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n//     'x-rapidapi-key': 'b1362c9901mshc2d39e104bbe13ap1560dfjsn450a61487a86'\r\n//   }\r\n// };\r\n\r\n// axios.request(options).then(function (response) {\r\n// \tconsole.log(response.data);\r\n// }).catch(function (error) {\r\n// \tconsole.error(error);\r\n// });","import React, {useState} from 'react';\r\nimport { Select, Typography, Row, Column, Avatar, Card, Col } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nconst {Text, Title} = Typography;\r\nconst { Option } = Select;\r\nconst demoImage = 'http://coinrevolution.com/wp-content/uploads/2020/06/cryptonews.jpg';\r\n\r\nconst News = ({simplified}) => {\r\n    const [newsCategory, setnewsCategory] = useState('Cryptocurrency');\r\n    const { data } = useGetCryptosQuery(100);\r\n    const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12});\r\n    console.log(cryptoNews);\r\n    \r\n    if(!cryptoNews?.value) return 'Loading..';\r\n    \r\n    return (\r\n        <Row gutter={[24,24]}>\r\n            {\r\n                !simplified && (\r\n                    <Col span={24}>\r\n                        <Select\r\n                            showSearch\r\n                            className=\"select-news\"\r\n                            placeholder=\"Select a Crypto\"\r\n                            optionFilterProp=\"children\"\r\n                            onChange={(value) => setnewsCategory(value)}\r\n                            filterOption={(input, option) => (input.toLowerCase()) >= 0}\r\n                        >\r\n                            <Option value=\"Cryptocurrency\">\r\n                                {data?.data?.coins.map((coin) => <Option value={coin.name}>{coin.name}</Option>)}\r\n                            </Option>\r\n                        </Select>\r\n                    </Col>\r\n                )\r\n            }\r\n            {cryptoNews.value.map((news, i) => (\r\n                <Col xs={24} sm={12} lg={8} key={i}>\r\n                    <Card hoverable className=\"news-card\">\r\n                        <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                            <div className=\"news-image-container\">\r\n                                <Title className=\"news-title\" level={4}>\r\n                                    {news.name}\r\n                                </Title>\r\n                                <img src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"news\"/>\r\n                            </div>\r\n                            <p>\r\n                            {   news.description > 100 ?  `${news.description.substring(0,100)}...`\r\n                                :\r\n                                news.description    \r\n                            }\r\n                            </p>\r\n                            <div className=\"provider-container\">\r\n                                <div>\r\n                                    <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\"/>\r\n                                    <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                                </div>\r\n                                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n                            </div>\r\n                        </a>\r\n                    </Card>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Typography, Row, Col, Statistic } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\n//import Cryptocurrencies from './Cryptocurrencies';\r\nimport {Cryptocurrencies, News} from '../components'; \r\n\r\nconst { Title } = Typography;\r\n\r\nconst Homepage = () => {\r\n    const { data, isFetching } = useGetCryptosQuery(10);\r\n    const globalStats = data?.data?.stats;\r\n    \r\n    console.log(\"data below jhere\");\r\n    console.log(data);\r\n    if(isFetching) return \"Loading...\";\r\n    return (\r\n        <>\r\n        <Title level={2} className=\"heading\">Global Crypto Stats</Title>\r\n        <Row>\r\n            <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total}/></Col>\r\n            <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)}/></Col>\r\n            <Col span={12}><Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)}/></Col>\r\n            <Col span={12}><Statistic title=\"Total 24h volume\" value={millify(globalStats.total24hVolume)}/></Col>\r\n            <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)}/></Col>\r\n        </Row>\r\n        <div className=\"home-heading-container\">\r\n            <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies in the world</Title>\r\n            <Title level={3} className=\"show-more\"><Link to='/cryptocurrencies'>Show More</Link></Title>\r\n        </div>\r\n        <Cryptocurrencies simplified />\r\n        <div className=\"home-heading-container\">\r\n            <Title level={2} className=\"home-title\">Latest Crypto News</Title>\r\n            <Title level={3} className=\"show-more\"><Link to='/news'>Show More</Link></Title>\r\n        </div>\r\n        <News simplified />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage;\r\n","import React from 'react';\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport { Layout, Typography, Space } from 'antd';\r\nimport { Navbar, Exchanges, Homepage, Cryptocurrencies,  News, CryptoDetails } from './components'; \r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"navbar\">\r\n                <Navbar />\r\n            </div>\r\n            <div className=\"main\">\r\n                <Layout>\r\n                    <div className=\"routes\">\r\n                        <Switch>\r\n                            <Route exact path = \"/\">\r\n                                <Homepage />\r\n                            </Route>\r\n                            <Route exact path = \"/exchanges\">\r\n                                <Exchanges />\r\n                            </Route>\r\n                            <Route exact path = \"/cryptocurrencies\">\r\n                                <Cryptocurrencies />\r\n                            </Route>\r\n                            <Route exact path = \"/crypto/:coinId\">\r\n                                <CryptoDetails />\r\n                            </Route>\r\n                            <Route exact path = \"/news\">\r\n                                <News />\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n                </Layout>\r\n            \r\n            <div className=\"footer\">\r\n                <Typography.Title level={5} style={{color: 'white', textAlign: 'center'}}>\r\n                    Cryptoverse <br />\r\n                    All rights reserved\r\n                </Typography.Title>\r\n                <Space>\r\n                    <Link to=\"/\">Home</Link>\r\n                    <Link to=\"/exchanges\">Exchanges</Link>\r\n                    <Link to=\"/news\">News</Link>\r\n                </Space>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import {configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { cryptoApi } from '../services/cryptoApi';\r\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\r\n\r\nexport default configureStore ({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer\r\n    },\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport 'antd/dist/antd.css';\r\nimport store from './app/store';\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <Provider store={store}>\r\n        <App />\r\n        </Provider>\r\n    </Router>\r\n    , document.getElementById('root'));"],"sourceRoot":""}