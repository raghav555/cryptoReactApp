{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Cryptocurrencies.jsx","components/CryptoDetails.jsx","components/Exchanges.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Homepage.jsx","App.js","app/store.js","index.js"],"names":["Navbar","className","src","icon","size","Title","level","to","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","url","method","headers","getCryptosDetails","coinId","useGetCryptosQuery","Cryptocurrencies","simplified","cryptosList","data","isFetching","useState","cryptos","setCryptos","searchTerm","setsearchTerm","useEffect","filteredData","coins","filter","coin","name","toLowerCase","includes","console","log","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","id","title","rank","extra","iconUrl","hoverable","millify","price","marketCap","change","CryptoDetails","Typography","Text","Select","Option","useParams","Exchanges","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setnewsCategory","cryptoNews","span","showSearch","optionFilterProp","filterOption","input","option","news","i","href","rel","image","thumbnail","contentUrl","alt","description","substring","provider","moment","datePublished","startOf","fromNow","Homepage","globalStats","stats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","App","exact","path","style","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.04a35a38.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React from 'react';\r\nimport { Button, Menu, Typography, Avatar } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined} from '@ant-design/icons'; \r\nimport icon from '../images/cryptocurrency.png';\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n                <Avatar src={icon} size=\"large\" />\r\n                <Typography.Title level={2} className=\"logo\">\r\n                    <Link to=\"/\">Cryptoverse</Link>\r\n                </Typography.Title> \r\n            </div>\r\n            <Menu theme=\"dark\">\r\n                <Menu.Item icon={<HomeOutlined />}>\r\n                    <Link to=\"/\">Home</Link>\r\n                </Menu.Item> \r\n                <Menu.Item icon={<FundOutlined />}>\r\n                    <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n                </Menu.Item> \r\n                <Menu.Item icon={<MoneyCollectOutlined />}>\r\n                    <Link to=\"/exchanges\">Exchanges</Link>\r\n                </Menu.Item> \r\n                <Menu.Item icon={<BulbOutlined />}>\r\n                    <Link to=\"/news\">News</Link>\r\n                </Menu.Item> \r\n            </Menu>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import {createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': 'd51adb557amsh2aa5a154b3b9986p12feb3jsnb2f7bde10e48'\r\n}\r\n\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders});\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({baseUrl}),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: (count) => {\r\n            return ({\r\n                url: `/coins?limit=${count}`,\r\n                method: 'GET',\r\n                headers: cryptoApiHeaders,\r\n                count: count\r\n                })\r\n            }\r\n        }),\r\n        getCryptosDetails: builder.query({\r\n            query: (coinId) => {\r\n            return ({\r\n                url: `/coins/${coinId}`,\r\n                method: 'GET',\r\n                headers: cryptoApiHeaders,\r\n                })\r\n            }\r\n        }),\r\n    })\r\n});\r\n\r\nexport const {\r\n    useGetCryptosQuery,\r\n} = cryptoApi;\r\n\r\n// var axios = require(\"axios\").default;\r\n\r\n// var options = {\r\n//   method: 'GET',\r\n//   url: 'https://coinranking1.p.rapidapi.com/exchanges',\r\n//   headers: {\r\n//     'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n//     'x-rapidapi-key': 'd51adb557amsh2aa5a154b3b9986p12feb3jsnb2f7bde10e48'\r\n//   }\r\n// };\r\n\r\n// axios.request(options).then(function (response) {\r\n// \tconsole.log(\"in correct\");\r\n//     console.log(response.data);\r\n// }).catch(function (error) {\r\n//     console.log(\"in this error\");\r\n// \tconsole.error(error);\r\n// });","import React, {useState, useEffect} from 'react';\r\nimport millify from 'millify';\r\nimport { Link } from 'react-router-dom';\r\nimport {Card, Row, Col, Input} from 'antd';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\n\r\nconst Cryptocurrencies = ({simplified}) => {\r\n    const count = simplified ? 10 : 100\r\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [searchTerm, setsearchTerm] = useState('');\r\n\r\n    useEffect(() => {\r\n        // setCryptos(cryptosList?.data?.coins);\r\n\r\n        const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\r\n\r\n        setCryptos(filteredData);\r\n\r\n    }, [cryptosList, searchTerm]);\r\n    console.log(cryptos);\r\n    if(isFetching) return 'Loading...';\r\n    return (\r\n        <>\r\n            {!simplified && (\r\n            <div className=\"search-crypto\">\r\n                <Input placeholder=\"Search Cryptocurrency\" onChange={(e) => setsearchTerm(e.target.value)}/>\r\n            </div>\r\n            )\r\n            }              \r\n            <Row gutter={[32,32]} className=\"crypto-card-container\">\r\n                {cryptos?.map((currency) => (\r\n                     <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n                         <Link to={`/crypto/${currency.id}`}>\r\n                            <Card title={`${currency.rank}. ${currency.name}`}\r\n                                  extra={<img className=\"crypto-image\" src={currency.iconUrl}/>}\r\n                                  hoverable\r\n                            >\r\n                                <p>Price: {millify(currency.price)}</p>\r\n                                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                                <p>Daily Change: {millify(currency.change)}%</p>\r\n                            </Card>\r\n                         </Link>\r\n                     \r\n                     </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies;\r\n","import React, { useState } from 'react';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { useParams } from 'react-router';\r\nimport millify from 'millify';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\nimport { useGetCryptoDetailsQuery } from '../services/cryptoApi';\r\nconst { Title, Text } =  Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n    const { coinId } = useParams();\r\n    const [timePeriod, settimePeriod] = useState('7d');\r\n    //const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n\r\n    //console.log(data);\r\n    return (\r\n        <div>\r\n            CryptoDetails {coinId}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CryptoDetails;\r\n","import React from 'react'\r\n\r\nconst Exchanges = () => {\r\n    return (\r\n        <div>\r\n            Exchanges\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Exchanges;\r\n","import {createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoNewsHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n    'x-rapidapi-key': 'b1362c9901mshc2d39e104bbe13ap1560dfjsn450a61487a86'\r\n}\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders});\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({baseUrl}),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: ({newsCategory ,count}) => {\r\n            console.log(newsCategory);\r\n            console.log(count);\r\n            return ({\r\n                url: `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`,\r\n                method: 'GET',\r\n                headers: cryptoNewsHeaders,\r\n                count: count\r\n                })\r\n            }\r\n        })\r\n    })\r\n});\r\n\r\nexport const {\r\n    useGetCryptoNewsQuery,\r\n} = cryptoNewsApi;\r\n\r\n// var axios = require(\"axios\").default;\r\n\r\n// var options = {\r\n//   method: 'GET',\r\n//   url: 'https://bing-news-search1.p.rapidapi.com/news/search',\r\n//   params: {q: '<REQUIRED>', safeSearch: 'Off', textFormat: 'Raw', freshness: 'Day'},\r\n//   headers: {\r\n//     'x-bingapis-sdk': 'true',\r\n//     'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n//     'x-rapidapi-key': 'b1362c9901mshc2d39e104bbe13ap1560dfjsn450a61487a86'\r\n//   }\r\n// };\r\n\r\n// axios.request(options).then(function (response) {\r\n// \tconsole.log(response.data);\r\n// }).catch(function (error) {\r\n// \tconsole.error(error);\r\n// });","import React, {useState} from 'react';\r\nimport { Select, Typography, Row, Column, Avatar, Card, Col } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nconst {Text, Title} = Typography;\r\nconst { Option } = Select;\r\nconst demoImage = 'http://coinrevolution.com/wp-content/uploads/2020/06/cryptonews.jpg';\r\n\r\nconst News = ({simplified}) => {\r\n    const [newsCategory, setnewsCategory] = useState('Cryptocurrency');\r\n    const { data } = useGetCryptosQuery(100);\r\n    const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12});\r\n    console.log(cryptoNews);\r\n    \r\n    if(!cryptoNews?.value) return 'Loading..';\r\n    \r\n    return (\r\n        <Row gutter={[24,24]}>\r\n            {\r\n                !simplified && (\r\n                    <Col span={24}>\r\n                        <Select\r\n                            showSearch\r\n                            className=\"select-news\"\r\n                            placeholder=\"Select a Crypto\"\r\n                            optionFilterProp=\"children\"\r\n                            onChange={(value) => setnewsCategory(value)}\r\n                            filterOption={(input, option) => (input.toLowerCase()) >= 0}\r\n                        >\r\n                            <Option value=\"Cryptocurrency\">\r\n                                {data?.data?.coins.map((coin) => <Option value={coin.name}>{coin.name}</Option>)}\r\n                            </Option>\r\n                        </Select>\r\n                    </Col>\r\n                )\r\n            }\r\n            {cryptoNews.value.map((news, i) => (\r\n                <Col xs={24} sm={12} lg={8} key={i}>\r\n                    <Card hoverable className=\"news-card\">\r\n                        <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                            <div className=\"news-image-container\">\r\n                                <Title className=\"news-title\" level={4}>\r\n                                    {news.name}\r\n                                </Title>\r\n                                <img src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"news\"/>\r\n                            </div>\r\n                            <p>\r\n                            {   news.description > 100 ?  `${news.description.substring(0,100)}...`\r\n                                :\r\n                                news.description    \r\n                            }\r\n                            </p>\r\n                            <div className=\"provider-container\">\r\n                                <div>\r\n                                    <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\"/>\r\n                                    <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                                </div>\r\n                                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n                            </div>\r\n                        </a>\r\n                    </Card>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Typography, Row, Col, Statistic } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\n//import Cryptocurrencies from './Cryptocurrencies';\r\nimport {Cryptocurrencies, News} from '../components'; \r\n\r\nconst { Title } = Typography;\r\n\r\nconst Homepage = () => {\r\n    const { data, isFetching } = useGetCryptosQuery(10);\r\n    const globalStats = data?.data?.stats;\r\n    \r\n    console.log(\"data below jhere\");\r\n    console.log(data);\r\n    if(isFetching) return \"Loading...\";\r\n    return (\r\n        <>\r\n        <Title level={2} className=\"heading\">Global Crypto Stats</Title>\r\n        <Row>\r\n            <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total}/></Col>\r\n            <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)}/></Col>\r\n            <Col span={12}><Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)}/></Col>\r\n            <Col span={12}><Statistic title=\"Total 24h volume\" value={millify(globalStats.total24hVolume)}/></Col>\r\n            <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)}/></Col>\r\n        </Row>\r\n        <div className=\"home-heading-container\">\r\n            <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies in the world</Title>\r\n            <Title level={3} className=\"show-more\"><Link to='/cryptocurrencies'>Show More</Link></Title>\r\n        </div>\r\n        <Cryptocurrencies simplified />\r\n        <div className=\"home-heading-container\">\r\n            <Title level={2} className=\"home-title\">Latest Crypto News</Title>\r\n            <Title level={3} className=\"show-more\"><Link to='/news'>Show More</Link></Title>\r\n        </div>\r\n        <News simplified />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage;\r\n","import React from 'react';\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport { Layout, Typography, Space } from 'antd';\r\nimport { Navbar, Exchanges, Homepage, Cryptocurrencies,  News, CryptoDetails } from './components'; \r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"navbar\">\r\n                <Navbar />\r\n            </div>\r\n            <div className=\"main\">\r\n                <Layout>\r\n                    <div className=\"routes\">\r\n                        <Switch>\r\n                            <Route exact path = \"/\">\r\n                                <Homepage />\r\n                            </Route>\r\n                            <Route exact path = \"/exchanges\">\r\n                                <Exchanges />\r\n                            </Route>\r\n                            <Route exact path = \"/cryptocurrencies\">\r\n                                <Cryptocurrencies />\r\n                            </Route>\r\n                            <Route exact path = \"/crypto/:coinId\">\r\n                                <CryptoDetails />\r\n                            </Route>\r\n                            <Route exact path = \"/news\">\r\n                                <News />\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n                </Layout>\r\n            \r\n            <div className=\"footer\">\r\n                <Typography.Title level={5} style={{color: 'white', textAlign: 'center'}}>\r\n                    Cryptoverse <br />\r\n                    All rights reserved\r\n                </Typography.Title>\r\n                <Space>\r\n                    <Link to=\"/\">Home</Link>\r\n                    <Link to=\"/exchanges\">Exchanges</Link>\r\n                    <Link to=\"/news\">News</Link>\r\n                </Space>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import {configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { cryptoApi } from '../services/cryptoApi';\r\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\r\n\r\nexport default configureStore ({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer\r\n    },\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport 'antd/dist/antd.css';\r\nimport store from './app/store';\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <Provider store={store}>\r\n        <App />\r\n        </Provider>\r\n    </Router>\r\n    , document.getElementById('root'));"],"sourceRoot":""}